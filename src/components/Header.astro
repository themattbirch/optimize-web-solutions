---
// src/components/Header.astro
import { Image } from "astro:assets";
import darkLogo from "../assets/images/optimize-web-solutions-logo.png";
import lightLogo from "../assets/images/optimize-web-solutions-logo-light.webp";
import ThemeToggle from "./ThemeToggle.jsx";

const links = [
  { title: "Home", path: "/" },
  { title: "About", path: "/about" },
  { title: "Services", path: "/services" },
  { title: "Contact", path: "/contact" },
];
---

<header
  id="site-header"
  class="sticky top-0 z-50 w-full bg-white dark:bg-gray-950 shadow-sm transition-colors duration-300"
>
  <div
    class="mx-auto flex max-w-screen-xl items-center justify-between px-4 py-4 md:py-5"
  >
    <a href="/" aria-label="Optimize Web Solutions" class="shrink-0">
      <Image src={lightLogo} alt="" width="160" class="block dark:hidden" />
      <Image src={darkLogo} alt="" width="160" class="hidden dark:block" />
    </a>

    <div class="flex items-center gap-4">
      <ThemeToggle client:load />
      <nav class="hidden md:block">
        <ul class="flex items-center gap-8 font-heading">
          {
            links.map((l) => (
              <li>
                <a
                  href={l.path}
                  class="header-link relative text-gray-800 dark:text-gray-200 after:absolute after:left-0 after:-bottom-0.5 after:h-0.5 after:w-0 after:bg-accent-secondary after:transition-[width] after:duration-300 hover:after:w-full"
                >
                  {l.title}
                </a>
              </li>
            ))
          }
          <li>
            <a
              href="tel:7035993188"
              class="rounded-full border-2 border-accent-secondary bg-[#E68A00]/90 px-6 py-2 font-bold text-gray-900 shadow-sm transition hover:border-[#CC7A00] hover:bg-[#CC7A00]"
            >
              Book Us
            </a>
          </li>
        </ul>
      </nav>
      <button id="mobile-toggle" class="p-2 md:hidden">
        <span class="block h-0.5 w-6 bg-gray-800 dark:bg-gray-200"></span>
        <span class="my-1 block h-0.5 w-6 bg-gray-800 dark:bg-gray-200"></span>
        <span class="block h-0.5 w-6 bg-gray-800 dark:bg-gray-200"></span>
      </button>
    </div>
  </div>
</header>

<script>
  const header = document.getElementById("site-header");

  // FIX: The entire logic is now inside this `if` block.
  // This tells TypeScript that 'header' can't be null here.
  if (header) {
    const setHeaderAppearance = () => {
      const hero = document.querySelector(".-mt-24");

      if (window.scrollY < 10 && hero) {
        header.classList.add("on-hero");
      } else {
        header.classList.remove("on-hero");
      }
    };

    const onPageLoad = () => {
      setHeaderAppearance();
      document.addEventListener("scroll", setHeaderAppearance, {
        passive: true,
      });
    };

    if (document.readyState === "loading") {
      document.addEventListener("DOMContentLoaded", onPageLoad);
    } else {
      onPageLoad();
    }
  }
</script>

<style>
  /* FIX: These styles ONLY apply in dark mode AND when the 'on-hero' class is present. */
  /* In light mode, this rule is ignored, so the header stays white. */
  .dark .on-hero {
    background-color: transparent !important;
    box-shadow: none !important;
  }

  /* When transparent in dark mode, make links white */
  .dark .on-hero .header-link {
    color: white;
  }

  /* When transparent in dark mode, make hamburger icon white */
  .dark .on-hero #mobile-toggle span {
    background-color: white;
  }
</style>

<script is:inline>
  const btn = document.getElementById("mobile-toggle");
  const panel = document.getElementById("mobile-panel");
  if (btn && panel) {
    btn.addEventListener("click", () => {
      const open = panel.style.transform === "scaleY(1)";
      panel.style.transform = open ? "scaleY(0)" : "scaleY(1)";
      btn.setAttribute("aria-expanded", String(!open));
    });
  }
</script>
